{"version":3,"sources":["webpack:///./src/components/cards/ProjectCard.js","webpack:///./src/utils/transformRawDate.js","webpack:///./src/pages/projects.js","webpack:///./src/components/root/SideBar.js","webpack:///./src/components/root/TopBar.js","webpack:///./src/components/root/Root.js"],"names":["SkillCard","thumbnail","imgalt","type","title","link","subtitle","abstract","className","src","alt","getTextColorByType","to","transformRawDate","rawDate","date","Date","getMonth","getFullYear","projectsQuery","ProjectsPage","projects","data","nighost","sort","a","b","endAt","Root","Helmet","map","project","ProjectCard","projectId","startAt","SideBar","tab","index","activeClassName","partiallyActive","href","icon","faGithub","size","faLinkedin","TopBar","scrolled","React","useState","openHamburger","setOpenHamburger","style","transition","faBars","onClick","faBatteryQuarter","children","setScrolled","mainContentRef","createRef","faPhoneSlash","faSignal","faWifi","ref","onScroll","current","scrollTop"],"mappings":"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","file":"component---src-pages-projects-js-0da79f912cff694fa049.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst SkillCard = ({ thumbnail, imgalt, type, title, link, subtitle, abstract, className }) => {\n  const getTextColorByType = () => {\n    switch(type) {\n      case 'Web-App':\n        return \"bg-blue-200 text-blue-800\";\n      case 'Application':\n        return \"bg-red-200 text-red-800\";\n      case 'Game':\n        return \"bg-green-200 text-green-800\";\n      case 'Chatbot':\n        return \"bg-indigo-200 text-indigo-800\";\n      default:\n        return \"\";\n    }\n  }\n\n  return (\n    <div className={`flex flex-col rounded-lg shadow-lg overflow-hidden ${className}`}>\n      <div className=\"flex-shrink-0\">\n        <img className=\"h-48 w-full object-cover\" src={thumbnail} alt={imgalt} />\n      </div>\n      <div className=\"flex-1 bg-gray-100 p-6 flex flex-col justify-between\">\n        <div className=\"flex-1\">\n          <p className={`text-sm font-medium py-0.5 px-3 w-fit-content rounded-full ${getTextColorByType(type)}`}>\n            { type }\n          </p>\n          <Link to={link} className=\"block mt-2\">\n            <p className=\"text-xl font-semibold text-gray-900\">\n              { title }\n            </p>\n            <p className=\"mt-1 text-sm font-medium text-gray-600\">\n              { subtitle }\n            </p>\n            <p className=\"mt-3 text-base text-gray-500\">\n              { abstract }\n            </p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SkillCard;\n","const transformRawDate = (rawDate) => {\n  const monthMapping = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n\n  const date = new Date(rawDate);\n\n  return `${monthMapping[date.getMonth()]} ${date.getFullYear()}`;\n}\n\nexport default transformRawDate;\n","import React from \"react\";\nimport { graphql } from 'gatsby';\nimport { Helmet } from \"react-helmet\";\n\nimport Root from \"../components/root/Root\";\nimport ProjectCard from '../components/cards/ProjectCard';\nimport transformRawDate from '../utils/transformRawDate';\n\nconst ProjectsPage = ({ data }) => {\n  const projects = data.nighost.projects.sort((a, b) => a.endAt < b.endAt ? 1 : -1);\n  \n  return (\n    <Root>\n      <Helmet>\n        <title>Chris Liu - Projects</title>\n      </Helmet>\n      <div className=\"flex flex-col items-center w-full bg-background-blue-100\">\n        <div className=\"flex flex-col items-center w-full bg-header-blue-grey py-16 md:py-24 lg:py-40 skew-left mt-6 md:mt-10\">\n          <h1 className=\"text-3xl lg:text-5xl xl:text-6xl text-header-blue font-bold tracking-wide skew-right text-center\">\n            Some work by me...\n          </h1>\n        </div>\n        <div className=\"relative bg-transparent pb-10 px-8 sm:px-10 lg:pb-12 lg:px-12\">\n          <div className=\"relative max-w-7xl mx-auto\">\n            <div className=\"max-w-lg mx-auto grid gap-6 xl:grid-cols-2 2xl:grid-cols-3 lg:max-w-none\">\n              {\n                projects.map((project) => (\n                  <ProjectCard\n                    thumbnail={project.thumbnail}\n                    imgalt={project.projectId}\n                    type={project.type}\n                    title={project.title}\n                    link={`/projects/${project.projectId}`}\n                    subtitle={`${transformRawDate(project.startAt)} - ${transformRawDate(project.endAt)}`}\n                    abstract={project.abstract}\n                  />\n                ))\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </Root>\n  );\n};\n\nexport const projectsQuery = graphql`\n  query projectsQuery {\n    nighost {\n      projects {\n        projectId\n        thumbnail\n        type\n        title\n        startAt\n        endAt\n        abstract\n      }\n    }\n  }\n`;\n\nexport default ProjectsPage;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst SideBar = () => {\n  return (\n    <div className=\"w-60 xl:w-72 h-full hidden md:flex flex-col justify-between px-6 xl:px-8 py-12 bg-background-blue-400\">\n      <div className=\"flex flex-col\">\n        <Link to=\"/\">\n          <img src=\"/sidebar-logo-dark-mode.png\" alt=\"logo\" />\n        </Link>\n        <p className=\"mt-3 text-md text-custom-grey-300\">Software Developer</p>\n      </div>\n      <div className=\"flex flex-col\">\n        <ul>\n          {\n            [\"home\", \"skills\", \"projects\", \"work & edu\", \"writings\"].map((tab, index) => (\n              <li className={index !== 0 ? \"mt-6\" : \"\"}>\n                <Link\n                  to={`${index === 0 ? \"/\" : (index === 3 ? \"/workneducation\" : `/${tab}`)}`}\n                  className=\"text-xl uppercase text-custom-grey-300 tracking-widest hover:text-custom-grey-100 hover:font-bold\"\n                  activeClassName=\"text-custom-grey-100 font-bold border-b-4 border-solid\"\n                  partiallyActive={index !== 0 ? true : false}\n                >\n                  {tab}\n                </Link>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n      <div className=\"flex flex-col\">\n        <p className=\"text-sm mb-3 text-custom-grey-300\">\n          {`Contact me by\\n`}<strong>chrisliupascal@gmail.com</strong>\n        </p>\n        <ul className=\"list-none flex flex-row\">\n          <li>\n            <a href=\"https://github.com/nighostchris\" className=\"no-underline text-white\">\n              <FontAwesomeIcon icon={faGithub} size=\"lg\" />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.linkedin.com/in/chrisliupascal\" className=\"no-underline text-white\">\n              <FontAwesomeIcon icon={faLinkedin} className=\"ml-3\" size=\"lg\" />\n            </a>\n          </li>\n        </ul>\n        <p className=\"text-sm mt-3 text-custom-grey-100\">\n          Maintained and Owned by CHRIS LIU\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faBatteryQuarter } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TopBar = ({ scrolled }) => {\n  const [openHamburger, setOpenHamburger] = React.useState(false);\n\n  const topBarStyleController = () => {\n    if (!scrolled && !openHamburger) {\n      return \"h-16 text-white bg-transparent\";\n    } else if (!scrolled && openHamburger) {\n      return \"h-16 text-header-blue-grey bg-white\";\n    } else if (scrolled && !openHamburger) {\n      return \"h-12 text-header-blue-grey bg-white shadow-md\";\n    } else {\n      return \"h-12 text-header-blue-grey bg-white\";\n    }\n  }\n\n  return (\n    <div\n      style={{ transition: \"background-color 0.3s ease 0s, box-shadow 0.3s ease 0s, height 0.5s ease 0s\" }}\n      className={`fixed flex flex-row top-0 left-0 right-0 px-4 items-center justify-center z-20 md:hidden ${topBarStyleController()}`}\n    >\n      <FontAwesomeIcon icon={faBars} onClick={() => setOpenHamburger(!openHamburger)} className=\"absolute left-4\" size=\"lg\" />\n      <Link to=\"/\">\n        <img src=\"/topbar-logo.png\" alt=\"logo\" className={`w-44 ${scrolled || openHamburger ? \"block\" : \"hidden\"}`} />\n        <img src=\"/topbar-logo-dark-mode.png\" alt=\"logo\" className={`w-44 ${scrolled || openHamburger ? \"hidden\" : \"block\"}`} />\n      </Link>\n      <FontAwesomeIcon icon={faBatteryQuarter} className=\"absolute right-4 ml-2 w-5 h-5\" size=\"lg\" />\n      <menu className={`${openHamburger ? 'flex' : 'hidden'} flex-row fixed w-screen h-full bg-white -z-10 top-0 justify-center text-center items-center m-0 p-0`}>\n        <ul>\n          {\n            [\"home\", \"skills\", \"projects\", \"work & edu\", \"writings\"].map((tab, index) => (\n              <li className={index !== 0 ? \"mt-6\" : \"\"}>\n                <Link\n                  to={`${index === 0 ? \"/\" : (index === 3 ? \"/workneducation\" : `/${tab}`)}`}\n                  className=\"text-xl uppercase text-black tracking-widest\"\n                  activeClassName=\"text-black font-bold border-b-4 border-solid border-black\"\n                  partiallyActive={index !== 0 ? true : false}\n                >\n                  {tab}\n                </Link>\n              </li>\n            ))\n          }\n        </ul>\n      </menu>\n    </div>\n  );\n};\n\nexport default TopBar;\n","import React from \"react\";\nimport \"./root.css\";\nimport SideBar from \"./SideBar\";\nimport TopBar from \"./TopBar\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhoneSlash, faSignal, faWifi, faBatteryQuarter } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Root = ({ children }) => {\n  const [scrolled, setScrolled] = React.useState(false);\n  const mainContentRef = React.createRef(null);\n\n  const scrollEventHandler = () => {\n    if (mainContentRef.current.scrollTop !== 0 ) {\n      setScrolled(true);\n    } else {\n      setScrolled(false);\n    }\n  }\n\n  return (\n    <div className=\"flex flex-row w-full h-full bg-custom-grey-100\">\n      <SideBar />\n      <TopBar scrolled={scrolled} />\n      <div className=\"hidden md:flex flex-row absolute top-4 right-4 text-white z-10\">\n        <FontAwesomeIcon icon={faPhoneSlash} />\n        <FontAwesomeIcon icon={faSignal} className=\"ml-2\" />\n        <FontAwesomeIcon icon={faWifi} className=\"ml-2\" />\n        <FontAwesomeIcon icon={faBatteryQuarter} className=\"ml-2\" />\n      </div>\n      <div\n        ref={mainContentRef}\n        className=\"w-full overflow-y-auto\"\n        onScroll={scrollEventHandler}\n      >\n        { children }\n      </div>\n    </div>\n  );\n}\n\nexport default Root;\n"],"sourceRoot":""}