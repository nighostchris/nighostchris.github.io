{"version":3,"sources":["webpack:///./src/pages/writepassage.js"],"names":["WritePassagePage","React","useState","rawPassage","setRawPassage","className","onClick","value","onChange","e","target","components","Title","Subtitle","Details","BoldText","NormalText","Header","Code","HyperLinkText","Image","ButtonLink","NumberedList","BulletList","Breakline","jsx"],"mappings":"4FAAA,mMAgFeA,UAjEU,WAAO,IAAD,EACOC,IAAMC,SAAS,IAA5CC,EADsB,KACVC,EADU,KAG7B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,6DAEF,yBAAKC,UAAU,8BACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,sBACb,uBACEA,UAAU,kCACVC,QAAS,kBAAMF,EAAcD,EAAa,gCAE5C,uBACEE,UAAU,6BACVC,QAAS,kBAAMF,EAAcD,EAAa,4BAE5C,uBACEE,UAAU,6BACVC,QAAS,kBAAMF,EAAcD,EAAa,gDAE5C,uBACEE,UAAU,gCACVC,QAAS,kBAAMF,EAAcD,EAAa,wBAE5C,uBACEE,UAAU,6BACVC,QAAS,kBAAMF,EAAcD,EAAa,gCAE5C,uBACEE,UAAU,mCACVC,QAAS,kBAAMF,EAAcD,EAAa,8BAE5C,uBACEE,UAAU,gCACVC,QAAS,kBAAMF,EAAcD,EAAa,+CAE5C,uBACEE,UAAU,gCACVC,QAAS,kBAAMF,EAAcD,EAAa,mDAE5C,uBACEE,UAAU,qCACVC,QAAS,kBAAMF,EAAcD,EAAa,qBAG9C,8BACEE,UAAU,iBACVE,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAOL,EAAcK,EAAEC,OAAOH,WAG5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEI,WAAY,CAAEC,UAAOC,aAAUC,YAASC,aAAUC,eAAYC,WAAQC,SAAMC,kBAAeC,UAAOC,eAAYC,iBAAcC,eAAYC,eACxIC,IAAKtB,S","file":"component---src-pages-writepassage-js-06a0d2f73012ce0d8e92.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport JsxParser from \"react-jsx-parser\";\nimport { Code } from \"../components/medium/Code\";\nimport ButtonLink from \"../components/ButtonLink\";\nimport { Image } from \"../components/medium/Image\";\nimport { Details } from \"../components/medium/Details\";\nimport { Container } from \"../components/medium/Container\";\nimport { Title, Subtitle, Header } from \"../components/medium/Header\";\nimport { NormalText, BoldText, HyperLinkText } from \"../components/medium/Text\";\nimport { NumberedList, BulletList } from \"../components/medium/List\";\nimport { Breakline } from \"../components/medium/Breakline\";\nimport Root from \"../components/root/Root\";\nimport \"./writepassage.css\";\n\nconst WritePassagePage = () => {\n  const [rawPassage, setRawPassage] = React.useState(\"\");\n\n  return (\n    <Root>\n      <Helmet>\n        <title>Chris Liu - Write Passage</title>\n      </Helmet>\n      <div className=\"main-content-write-passage\">\n        <div className=\"write-passage-left-panel\">\n          <div className=\"jsx-block-selector\">\n            <i\n              className=\"fas fa-paragraph jsx-block-icon\"\n              onClick={() => setRawPassage(rawPassage + \"<NormalText></NormalText>\")}\n            />\n            <i\n              className=\"fas fa-bold jsx-block-icon\"\n              onClick={() => setRawPassage(rawPassage + \"<BoldText></BoldText>\")}\n            />\n            <i\n              className=\"fas fa-link jsx-block-icon\"\n              onClick={() => setRawPassage(rawPassage + \"<HyperLinkText href={``}></HyperLinkText>\")}\n            />\n            <i\n              className=\"fas fa-heading jsx-block-icon\"\n              onClick={() => setRawPassage(rawPassage + \"<Header></Header>\")}\n            />\n            <i\n              className=\"fas fa-code jsx-block-icon\"\n              onClick={() => setRawPassage(rawPassage + \"<Code language=\\\"\\\"></Code>\")}\n            />\n            <i\n              className=\"fas fa-file-image jsx-block-icon\"\n              onClick={() => setRawPassage(rawPassage + \"<Image src=\\\"\\\" alt=\\\"\\\" />\")}\n            />\n            <i\n              className=\"fas fa-list-ul jsx-block-icon\"\n              onClick={() => setRawPassage(rawPassage + \"<BulletList listItems={[]}></BulletList>\")}\n            />\n            <i\n              className=\"fas fa-list-ol jsx-block-icon\"\n              onClick={() => setRawPassage(rawPassage + \"<NumberedList listItems={[]}></NumberedList>\")}\n            />\n            <i\n              className=\"fas fa-greater-than jsx-block-icon\"\n              onClick={() => setRawPassage(rawPassage + \"<Breakline />\")}\n            />\n          </div>\n          <textarea\n            className=\"passage-editor\"\n            value={rawPassage}\n            onChange={(e) => setRawPassage(e.target.value)}\n          />\n        </div>\n        <Container>\n          <JsxParser\n            components={{ Title, Subtitle, Details, BoldText, NormalText, Header, Code, HyperLinkText, Image, ButtonLink, NumberedList, BulletList, Breakline }}\n            jsx={rawPassage}\n          />\n        </Container>\n      </div>\n    </Root>\n  );\n}\n\nexport default WritePassagePage;\n"],"sourceRoot":""}