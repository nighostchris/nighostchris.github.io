{"version":3,"sources":["webpack:///./node_modules/react-grid-heatmap/dist/index.modern.js","webpack:///./src/pages/stonksviz/snpbreadth.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","noop","returnVal","Cell$1","memo","_ref","_ref$render","render","_ref$style","style","ratio","posX","posY","_ref$square","square","_ref$height","height","value","_onClick","onClick","createElement","border","borderWidth","textAlign","color","overflow","boxSizing","flexGrow","flexBasis","flexShrink","lineHeight","borderRadius","fontSize","cursor","background","Row","children","_ref$reverse","reverse","display","flexDirection","justifyContent","XLabels","labels","_ref$xLabelsStyle","xLabelsStyle","widthPercent","map","label","index","padding","width","Column","_ref$grow","grow","YLabels","_ref$yLabelsStyle","yLabelsStyle","YLabelAligner","_style","xLabelHeight","isXLabelReverse","HeatMapGrid","initHeight","eleRef","_React$useState","eleHeight","setEleHeight","data","xLabels","yLabels","_ref$xLabelsPos","xLabelsPos","_ref$yLabelsPos","yLabelsPos","_ref$cellHeight","cellHeight","cellStyle","cellRender","_useElemetHeight","useRef","useState","useEffect","current","clientHeight","xLabelRef","_getMinMax","flatArray","reduce","o","concat","max","Math","min","getMinMax","minMaxDiff","isYLabelReverse","ref","rowItems","xi","yi","industryNamesMappingInTrend","Map","abbreviation","stockQuery","StockPage","antDesignCharts","process","browser","require","React","expanded","setExpanded","breadths","nighost","snp_breadths","sort","a","b","Date","date","yHeatmapData","communication","consumer_discretionary","consumer_staples","energy","financials","health_care","industrials","materials","real_estate","technology","utilities","heatmapData","_","acc","marketTrend","day","total","industryTrendData","keys","industry","get","filter","record","lastBreadth","calculateHeatmapColor","red","white","green","normalizedRatio","props","title","className","icon","faCaretUp","faCaretDown","size","abbr","Bar","xField","xAxis","position","yField","legend","fontWeight","Line","type","yAxis","maxLimit","annotations","content","start","end","stroke","lineDash","lineWidth","seriesField","tickInterval","Heatmap","colorField","v","marginLeft","marginRight","x","y","_ratio","logo","bottomText"],"mappings":"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","file":"component---src-pages-stonksviz-snpbreadth-js-1340fcb645ac4a5ad5b8.js","sourcesContent":["import React__default, { createElement } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar noop = function noop(returnVal) {\n  return function () {\n    return returnVal;\n  };\n};\n\nvar Cell = function Cell(_ref) {\n  var _ref$render = _ref.render,\n      render = _ref$render === void 0 ? noop(null) : _ref$render,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? noop({}) : _ref$style,\n      ratio = _ref.ratio,\n      posX = _ref.posX,\n      posY = _ref.posY,\n      _ref$square = _ref.square,\n      square = _ref$square === void 0 ? false : _ref$square,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? '2rem' : _ref$height,\n      value = _ref.value,\n      _onClick = _ref.onClick;\n  return React__default.createElement(\"div\", {\n    onClick: function onClick() {\n      return (_onClick || noop({}))(posX, posY);\n    },\n    style: _extends({\n      border: '1px solid #fff',\n      borderWidth: '1px 1px 0 0',\n      textAlign: 'center',\n      color: \"rgb(0, 0, 0, \" + (ratio / 2 + 0.4) + \")\",\n      overflow: 'hidden',\n      boxSizing: 'border-box',\n      flexGrow: square ? 0 : 1,\n      flexBasis: square ? height : 0,\n      flexShrink: 0,\n      height: height,\n      lineHeight: height,\n      borderRadius: '4px',\n      fontSize: '.8rem',\n      cursor: _onClick ? 'pointer' : 'initial',\n      background: \"rgb(12, 160, 44, \" + (ratio + 0.05) + \")\"\n    }, style(posX, posY, ratio))\n  }, render(posX, posY, value));\n};\n\nvar Cell$1 = React__default.memo(Cell);\n\nfunction Row(_ref) {\n  var children = _ref.children,\n      _ref$reverse = _ref.reverse,\n      reverse = _ref$reverse === void 0 ? false : _ref$reverse;\n  return React__default.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: reverse ? 'row-reverse' : 'row',\n      justifyContent: reverse ? 'flex-end' : 'initial'\n    }\n  }, children);\n}\n\nfunction XLabels(_ref) {\n  var labels = _ref.labels,\n      _ref$xLabelsStyle = _ref.xLabelsStyle,\n      xLabelsStyle = _ref$xLabelsStyle === void 0 ? function () {\n    return {};\n  } : _ref$xLabelsStyle,\n      height = _ref.height,\n      _ref$square = _ref.square,\n      square = _ref$square === void 0 ? false : _ref$square;\n  var widthPercent = 100 / labels.length + \"%\";\n  return React__default.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      textAlign: 'center'\n    }\n  }, labels.map(function (label, index) {\n    return React__default.createElement(\"div\", {\n      key: label,\n      style: _extends({\n        padding: '0.2rem 0',\n        boxSizing: 'border-box',\n        flexGrow: square ? 'initial' : 1,\n        overflow: 'hidden',\n        flexShrink: 1,\n        flexBasis: square ? height : widthPercent,\n        width: square ? height : widthPercent\n      }, xLabelsStyle(index))\n    }, label);\n  }));\n}\n\nfunction Column(_ref) {\n  var children = _ref.children,\n      _ref$grow = _ref.grow,\n      grow = _ref$grow === void 0 ? false : _ref$grow,\n      _ref$reverse = _ref.reverse,\n      reverse = _ref$reverse === void 0 ? false : _ref$reverse;\n  return React__default.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: reverse ? 'column-reverse' : 'column',\n      flexGrow: grow ? 1 : 0\n    }\n  }, children);\n}\n\nfunction YLabels(_ref) {\n  var labels = _ref.labels,\n      height = _ref.height,\n      _ref$yLabelsStyle = _ref.yLabelsStyle,\n      yLabelsStyle = _ref$yLabelsStyle === void 0 ? function () {\n    return {};\n  } : _ref$yLabelsStyle,\n      _ref$reverse = _ref.reverse,\n      reverse = _ref$reverse === void 0 ? false : _ref$reverse;\n  return React__default.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: reverse ? 'left' : 'right'\n    }\n  }, labels.map(function (label, index) {\n    return React__default.createElement(\"div\", {\n      key: label,\n      style: _extends({\n        boxSizing: 'border-box',\n        padding: '0 0.2rem',\n        lineHeight: height\n      }, yLabelsStyle(index))\n    }, label);\n  }));\n}\n\nfunction YLabelAligner(_ref) {\n  var _style;\n\n  var xLabelHeight = _ref.xLabelHeight,\n      isXLabelReverse = _ref.isXLabelReverse,\n      children = _ref.children;\n  var style = (_style = {}, _style[isXLabelReverse ? 'marginBottom' : 'marginTop'] = xLabelHeight + \"px\", _style);\n  return React__default.createElement(\"div\", {\n    style: style\n  }, children);\n}\n\nfunction useElemetHeight(initHeight) {\n  var eleRef = React__default.useRef(null);\n\n  var _React$useState = React__default.useState(initHeight),\n      eleHeight = _React$useState[0],\n      setEleHeight = _React$useState[1];\n\n  React__default.useEffect(function () {\n    if (eleRef.current) {\n      var height = (eleRef.current || {}).clientHeight;\n      setEleHeight(height);\n    }\n  }, []);\n  return [eleHeight, eleRef];\n}\n\nfunction getMinMax(data) {\n  var flatArray = data.reduce(function (i, o) {\n    return [].concat(o, i);\n  }, []);\n  var max = Math.max.apply(Math, flatArray);\n  var min = Math.min.apply(Math, flatArray);\n  return [min, max];\n}\n\nvar HeatMapGrid = function HeatMapGrid(_ref) {\n  var data = _ref.data,\n      xLabels = _ref.xLabels,\n      yLabels = _ref.yLabels,\n      _ref$xLabelsPos = _ref.xLabelsPos,\n      xLabelsPos = _ref$xLabelsPos === void 0 ? 'top' : _ref$xLabelsPos,\n      _ref$yLabelsPos = _ref.yLabelsPos,\n      yLabelsPos = _ref$yLabelsPos === void 0 ? 'left' : _ref$yLabelsPos,\n      _ref$square = _ref.square,\n      square = _ref$square === void 0 ? false : _ref$square,\n      _ref$cellHeight = _ref.cellHeight,\n      cellHeight = _ref$cellHeight === void 0 ? '2px' : _ref$cellHeight,\n      xLabelsStyle = _ref.xLabelsStyle,\n      yLabelsStyle = _ref.yLabelsStyle,\n      cellStyle = _ref.cellStyle,\n      cellRender = _ref.cellRender,\n      onClick = _ref.onClick;\n\n  var _useElemetHeight = useElemetHeight(22),\n      xLabelHeight = _useElemetHeight[0],\n      xLabelRef = _useElemetHeight[1];\n\n  var _getMinMax = getMinMax(data),\n      min = _getMinMax[0],\n      max = _getMinMax[1];\n\n  var minMaxDiff = max - min;\n  var isXLabelReverse = xLabelsPos === 'bottom';\n  var isYLabelReverse = yLabelsPos === 'right';\n  return createElement(Row, {\n    reverse: isYLabelReverse\n  }, yLabels && createElement(YLabelAligner, {\n    xLabelHeight: xLabelHeight,\n    isXLabelReverse: isXLabelReverse\n  }, createElement(YLabels, {\n    reverse: isYLabelReverse,\n    labels: yLabels,\n    height: cellHeight,\n    yLabelsStyle: yLabelsStyle\n  })), createElement(Column, {\n    reverse: isXLabelReverse,\n    grow: !square\n  }, createElement(\"div\", {\n    ref: xLabelRef\n  }, xLabels && createElement(XLabels, {\n    labels: xLabels,\n    xLabelsStyle: xLabelsStyle,\n    height: cellHeight,\n    square: square\n  })), createElement(Column, null, data.map(function (rowItems, xi) {\n    return createElement(Row, {\n      key: xi\n    }, rowItems.map(function (value, yi) {\n      return createElement(Cell$1, {\n        key: xi + \"-\" + yi,\n        posX: xi,\n        posY: yi,\n        onClick: onClick,\n        value: value,\n        height: cellHeight,\n        square: square,\n        render: cellRender,\n        style: cellStyle,\n        ratio: (value - min) / minMaxDiff\n      });\n    }));\n  }))));\n};\n\nexport { HeatMapGrid };","import React from \"react\";\nimport { HeatMapGrid } from 'react-grid-heatmap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Root from '../../components/stonksviz/Root';\nimport Footer from '../../components/stonksviz/Footer';\n\nconst industryNamesMappingInTrend = new Map([\n  ['communication', 'XLC'],\n  ['consumer_discretionary', 'XLY'],\n  ['consumer_staples', 'XLP'],\n  ['energy', 'XLE'],\n  ['financials', 'XLF'],\n  ['health_care', 'XLV'],\n  ['industrials', 'XLI'],\n  ['materials', 'XLB'],\n  ['real_estate', 'XLRE'],\n  ['technology', 'XLK'],\n  ['utilities', 'XLU']\n]);\n\nconst abbreviation = [\"XLC - 通訊服務\", \"XLY - 非必需消費品\", \"XLP - 必需消費品\", \"XLE - 能源\", \"XLF - 金融\", \"XLV - 醫療\", \"XLI - 工業\", \"XLB - 物料\", \"XLRE - 房地產\", \"XLK - 科技\", \"XLU - 公共\"];\n\nconst StockPage = ({ data }) => {\n  let antDesignCharts;\n  if (process.browser) {\n    antDesignCharts = require('@ant-design/charts');\n  }\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const breadths = data.nighost.snp_breadths.sort((a, b) => new Date(a.date) > new Date(b.date) ? -1 : 1);\n\n  const xLabels = [\"XLC\", \"XLY\", \"XLP\", \"XLE\", \"XLF\", \"XLV\", \"XLI\", \"XLB\", \"XLRE\", \"XLK\", \"XLU\", \"Total\"];\n  const yLabels = breadths.map((b) => b.date);\n\n  const yHeatmapData = breadths.map((b) => [\n    b.communication,\n    b.consumer_discretionary,\n    b.consumer_staples,\n    b.energy,\n    b.financials,\n    b.health_care,\n    b.industrials,\n    b.materials,\n    b.real_estate,\n    b.technology,\n    b.utilities\n  ]);\n\n  const heatmapData = yLabels.map((_, index) => [...yHeatmapData[index], yHeatmapData[index].reduce((acc, current) => acc + current)]);\n\n  const marketTrend = yHeatmapData.map((day, index) => ({ date: breadths[index].date, total: day.reduce((acc, current) => acc + current) }));\n\n  const industryTrendData = [].concat(...breadths.map((b) => Object.keys(b).map((industry) => ({\n      date: b.date,\n      value: b[industry],\n      industry: industryNamesMappingInTrend.get(industry)\n    }))))\n    .filter((record) => record.industry);\n\n  const lastBreadth = Object.keys(breadths[0]).map((industry) => ({\n      value: breadths[0][industry],\n      industry: industryNamesMappingInTrend.get(industry)\n    }))\n    .filter((record) => record.industry);\n\n  const calculateHeatmapColor = (ratio) => {\n    const red = [250, 87, 87];\n    const white = [255, 255, 255];\n    const green = [14, 158, 109];\n\n    if (ratio < 0.5) {\n      const normalizedRatio = ratio * 2;\n      return `rgb(${red[0] + (white[0] - red[0]) * normalizedRatio}, ${red[1] + (white[1] - red[1]) * normalizedRatio}, ${red[2] + (white[2] - red[2]) * normalizedRatio})`\n    } else if (ratio > 0.5) {\n      const normalizedRatio = (ratio - 0.5) * 2;\n      return `rgb(${white[0] - (white[0] - green[0]) * normalizedRatio}, ${white[1] - (white[1] - green[1]) * normalizedRatio}, ${white[2] - (white[2] - green[2]) * normalizedRatio})`\n    } else {\n      return \"rgb(255, 255, 255)\";\n    }\n  }\n\n  return (\n    <Root props={{ title: \"StonksViz - S&P Breadth\" }}>\n      <div className=\"w-full h-fit-content md:max-w-screen-md lg:max-w-screen-lg xl:max-w-screen-xl 2xl:max-w-screen-2xl flex flex-col mx-auto py-6 md:py-8 px-6 md:px-0\">\n        <h1 className=\"text-xl lg:text-3xl font-bold mb-2\">\n          What's S&P Breadth ?\n        </h1>\n        <p className=\"text-lg lg:text-xl text-gray-600 mb-2\">\n          Any S&P constitue that has it's last updated price <strong>{`>`} 20 MA</strong> will get 1 mark.\n        </p>\n        <p className=\"text-lg lg:text-xl text-gray-600 mb-4\">\n          We will define the market trend as <strong>OVERHEAT</strong> when the sum of marks are {`>`} 900, <strong>OVERSELL</strong> when the sum {`>`} 200\n        </p>\n        <div\n          className={`flex flex-row justify-between items-center px-4 bg-gray-400 w-full tracking-widest rounded-sm cursor-pointer h-8 ${expanded ? \"\" : \"mb-4 md:mb-8\"}`}\n          onClick={() => setExpanded(!expanded)}\n        >\n          <h6 className=\"text-gray-100\">\n            Industry Abbreviation\n          </h6>\n          <FontAwesomeIcon icon={expanded ? faCaretUp : faCaretDown} size=\"lg\" className=\"text-white\" />\n        </div>\n        <div className={`grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 px-4 py-4 mt-2 rounded-sm bg-gray-300 font-bold ${expanded ? 'block mb-4 md:mb-8' : 'hidden'}`}>\n          {\n            abbreviation.map((abbr) => (\n              <p className=\"text-center text-gray-700 hover:bg-gray-200 rounded-md\">{abbr}</p>\n            ))\n          }\n        </div>\n        {\n          process.browser && (\n            <>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-4\">\n                <div className=\"w-full flex p-4 md:p-6 bg-white rounded-sm shadow-sm flex-col\">\n                  <p className=\"text-md md:text-lg mb-4 md:mb-6 mx-auto\">\n                    Last Trading Day S&P Breadth\n                  </p>\n                  <antDesignCharts.Bar\n                    data={lastBreadth}\n                    xField='value'\n                    xAxis={{ position: 'right' }}\n                    yField='industry'\n                    legend={false}\n                    color={['#5B8FF9']}\n                    label={{\n                      style: { textAlign: 'center', fontWeight: 'bold' }\n                    }}\n                  />\n                </div>\n                <div className=\"w-full flex p-4 md:p-6 bg-white rounded-sm shadow-sm flex-col mt-8 md:mt-0\">\n                  <p className=\"text-md md:text-lg mb-4 md:mb-6 mx-auto\">\n                    S&P Breadth Trend\n                  </p>\n                  <antDesignCharts.Line\n                    data={marketTrend}\n                    xField='date'\n                    yField='total'\n                    xAxis={{ type: 'time' }}\n                    yAxis={{ maxLimit: 1100 }}\n                    annotations={[\n                      {\n                        type: 'text',\n                        position: ['10%', '79%'],\n                        content: 'Oversell Threshold',\n                        style: {\n                          fontWeight: 'bold'\n                        }\n                      },\n                      {\n                        type: 'text',\n                        position: ['10%', '15%'],\n                        content: 'Overheat Threshold',\n                        style: {\n                          fontWeight: 'bold'\n                        }\n                      },\n                      {\n                        type: 'line',\n                        start: ['0%', '82%'],\n                        end: ['100%', '82%'],\n                        style: {\n                          stroke: '#F3323A',\n                          lineDash: [1, 1],\n                          lineWidth: 2\n                        },\n                      },\n                      {\n                        type: 'line',\n                        start: ['0%', '18%'],\n                        end: ['100%', '18%'],\n                        style: {\n                          stroke: '#149D38',\n                          lineDash: [1, 1],\n                          lineWidth: 2\n                        },\n                      }\n                    ]}\n                  />\n                </div>\n              </div>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-4 md:mt-8\">\n                <div className=\"w-full flex p-4 md:p-6 bg-white rounded-sm shadow-sm mt-8 md:mt-0 flex-col\">\n                  <p className=\"text-md md:text-lg mb-4 md:mb-6 mx-auto\">\n                    S&P Breadth Trend by Industry\n                  </p>\n                  <antDesignCharts.Line\n                    data={industryTrendData}\n                    xField='date'\n                    yField='value'\n                    seriesField='industry'\n                    xAxis={{ type: 'time' }}\n                    yAxis={{ tickInterval: 25 }}\n                    color={['#0963EF', '#4645F6', '#AB32F1', '#F62575', '#F3323A', '#E6520E', '#C96E06', '#9B7F05', '#149D38', '#0D87BE', '#000000']}\n                  />\n                </div>\n                <div className=\"w-full flex p-4 md:p-6 bg-white rounded-sm shadow-sm mt-8 md:mt-0 flex-col\">\n                  <p className=\"text-md md:text-lg mb-4 md:mb-6 mx-auto\">\n                    S&P Breadth Heatmap by Industry\n                  </p>\n                  <antDesignCharts.Heatmap\n                    data={industryTrendData}\n                    xField='date'\n                    yField='industry'\n                    colorField='value'\n                    color={(v) => calculateHeatmapColor(v / 100)}\n                  />\n                </div>\n              </div>\n              <div className=\"w-full hidden md:flex px-6 py-8 bg-white rounded-sm shadow-sm mt-8 flex-col\">\n                <p className=\"text-md md:text-lg mb-4 md:mb-6 mx-auto\">\n                  S&P Breadth Heatmap by Industry (Detailed)\n                </p>\n                <HeatMapGrid\n                  data={heatmapData}\n                  xLabels={xLabels}\n                  xLabelsStyle={(index) => ({\n                    fontSize: '14px',\n                    marginLeft: index === 11 && '16px'\n                  })}\n                  yLabels={yLabels}\n                  yLabelsStyle={() => ({\n                    fontSize: '14px',\n                    marginRight: '16px',\n                    textAlign: 'justify'\n                  })}\n                  cellHeight='36px'\n                  cellStyle={(x, y, _ratio) => ({\n                    marginLeft: y === 11 && '16px',\n                    background: y !== 11 ? calculateHeatmapColor(heatmapData[x][y] / 100) : calculateHeatmapColor(heatmapData[x][y] / 1100)\n                  })}\n                  cellRender={(x, y, value) => <div title={`Pos(${x}, ${y}) = ${value}`} style={{ fontWeight: 'bold', fontSize: '14px' }}>{value}</div>}\n                />\n              </div>\n            </>\n          )\n        }\n      </div>\n      <Footer\n        props={{\n          logo: '/stonksviz-logo.svg',\n          background: 'bg-gray',\n          bottomText: 'text-gray'\n        }} \n      />\n    </Root>\n  );\n}\n\nexport const stockQuery = graphql`\n  query stockQuery {\n    nighost {\n      snp_breadths {\n        date\n        communication\n        consumer_discretionary\n        consumer_staples\n        energy\n        financials\n        health_care\n        industrials\n        materials\n        real_estate\n        technology\n        utilities\n      }\n    }\n  }\n`;\n\nexport default StockPage;\n"],"sourceRoot":""}