{"version":3,"sources":["webpack:///./src/components/cards/ProjectCard.js","webpack:///./src/utils/transformRawDate.js","webpack:///./src/pages/projects.js"],"names":["SkillCard","thumbnail","imgalt","type","title","link","subtitle","abstract","className","src","alt","getTextColorByType","to","transformRawDate","rawDate","date","Date","getMonth","getFullYear","projectsQuery","ProjectsPage","projects","data","nighost","sort","a","b","endAt","Root","Helmet","map","project","ProjectCard","projectId","startAt"],"mappings":"gNA4CeA,EAzCG,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,OAAQC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAc7E,OACE,yBAAKA,UAAS,2EAA6EA,GACzF,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,2BAA2BC,IAAKR,EAAWS,IAAKR,KAEjE,yBAAKM,UAAU,wDACb,yBAAKA,UAAU,UACb,uBAAGA,UAAS,8DApBO,WACzB,OAAOL,GACL,IAAK,UACH,MAAO,4BACT,IAAK,cACH,MAAO,0BACT,IAAK,OACH,MAAO,8BACT,IAAK,UACH,MAAO,iCAWuEQ,IACxER,GAEJ,kBAAC,IAAD,CAAMS,GAAIP,EAAMG,UAAU,cACxB,uBAAGA,UAAU,uCACTJ,GAEJ,uBAAGI,UAAU,0CACTF,GAEJ,uBAAGE,UAAU,gCACTD,QC3BDM,EARU,SAACC,GACxB,IAEMC,EAAO,IAAIC,KAAKF,GAEtB,MAJqB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAI/EC,EAAKE,YAA5B,IAA2CF,EAAKG,eC4CrCC,EAAa,aAgBXC,UAzDM,SAAC,GAAc,IAC5BC,EAD2B,EAAXC,KACAC,QAAQF,SAASG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KAE/E,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wDAEF,yBAAKrB,UAAU,4DACb,yBAAKA,UAAU,6EACb,wBAAIA,UAAU,4FAAd,uBAIF,yBAAKA,UAAU,2DACb,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,2CAEjB,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,4EAEXa,EAASS,KAAI,SAACC,GAAD,OACX,kBAACC,EAAD,CACE/B,UAAW8B,EAAQ9B,UACnBC,OAAQ6B,EAAQE,UAChB9B,KAAM4B,EAAQ5B,KACdC,MAAO2B,EAAQ3B,MACfC,KAAI,aAAe0B,EAAQE,UAC3B3B,SAAaO,EAAiBkB,EAAQG,SAA9B,MAA4CrB,EAAiBkB,EAAQJ,OAC7EpB,SAAUwB,EAAQxB","file":"component---src-pages-projects-js-4c3a74c8dd58f7c25ee4.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst SkillCard = ({ thumbnail, imgalt, type, title, link, subtitle, abstract, className }) => {\n  const getTextColorByType = () => {\n    switch(type) {\n      case 'Web-App':\n        return \"bg-blue-100 text-blue-800\";\n      case 'Application':\n        return \"bg-red-100 text-red-800\";\n      case 'Game':\n        return \"bg-green-100 text-green-800\";\n      case 'Chatbot':\n        return \"bg-indigo-100 text-indigo-800\";\n    }\n  }\n\n  return (\n    <div className={`flex flex-col rounded-lg shadow-lg overflow-hidden zoom hover:shadow-xl ${className}`}>\n      <div className=\"flex-shrink-0\">\n        <img className=\"h-48 w-full object-cover\" src={thumbnail} alt={imgalt} />\n      </div>\n      <div className=\"flex-1 bg-gray-100 p-6 flex flex-col justify-between\">\n        <div className=\"flex-1\">\n          <p className={`text-sm font-medium py-0.5 px-3 w-fit-content rounded-full ${getTextColorByType(type)}`}>\n            { type }\n          </p>\n          <Link to={link} className=\"block mt-2\">\n            <p className=\"text-xl font-semibold text-gray-900\">\n              { title }\n            </p>\n            <p className=\"mt-1 text-sm font-medium text-gray-400\">\n              { subtitle }\n            </p>\n            <p className=\"mt-3 text-base text-gray-500\">\n              { abstract }\n            </p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SkillCard;\n","const transformRawDate = (rawDate) => {\n  const monthMapping = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n\n  const date = new Date(rawDate);\n\n  return `${monthMapping[date.getMonth()]} ${date.getFullYear()}`;\n}\n\nexport default transformRawDate;\n","import React from \"react\";\nimport { graphql } from 'gatsby';\nimport { Helmet } from \"react-helmet\";\n\nimport Root from \"../components/root/Root\";\nimport ProjectCard from '../components/cards/ProjectCard';\nimport transformRawDate from '../utils/transformRawDate';\n\nconst ProjectsPage = ({ data }) => {\n  const projects = data.nighost.projects.sort((a, b) => a.endAt < b.endAt ? 1 : -1);\n  \n  return (\n    <Root>\n      <Helmet>\n        <title>Chris Liu - Projects</title>\n      </Helmet>\n      <div className=\"flex flex-col items-center w-full bg-background-blue-100\">\n        <div className=\"flex flex-col items-center w-full bg-header-blue-grey py-60px lg:py-100px\">\n          <h1 className=\"text-xl sm:text-3xl lg:text-4xl text-custom-grey-200 font-bold tracking-wide text-center\">\n            Some work by me...\n          </h1>\n        </div>\n        <div className=\"relative bg-gray-50 py-10 px-4 sm:px-6 lg:py-12 lg:px-8\">\n          <div className=\"absolute inset-0 bg-background-blue-100\">\n            <div className=\"bg-background-blue-100 h-1/3 sm:h-2/3\"></div>\n          </div>\n          <div className=\"relative max-w-7xl mx-auto\">\n            <div className=\"max-w-lg mx-auto grid gap-6 xl:grid-cols-2 2xl:grid-cols-3 lg:max-w-none\">\n              {\n                projects.map((project) => (\n                  <ProjectCard\n                    thumbnail={project.thumbnail}\n                    imgalt={project.projectId}\n                    type={project.type}\n                    title={project.title}\n                    link={`/projects/${project.projectId}`}\n                    subtitle={`${transformRawDate(project.startAt)} - ${transformRawDate(project.endAt)}`}\n                    abstract={project.abstract}\n                  />\n                ))\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </Root>\n  );\n};\n\nexport const projectsQuery = graphql`\n  query projectsQuery {\n    nighost {\n      projects {\n        projectId\n        thumbnail\n        type\n        title\n        startAt\n        endAt\n        abstract\n      }\n    }\n  }\n`;\n\nexport default ProjectsPage;\n"],"sourceRoot":""}