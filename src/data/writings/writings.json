[
  {
    "id": "0",
    "title": "How I stop manually deploying my site with updated components",
    "subtitle": "Solving problem by CI / CD",
    "date": "2020-06-20",
    "description": "When I started coding this personal website weeks ago, I was too lazy to setup automatic deployment upon any new changes I made to the site. Soon I found that it was SO STUPID...",
    "length": 4,
    "author": "Chris Liu",
    "avatarsrc": "https://cdn.pixabay.com/photo/2015/03/04/22/35/head-659652_960_720.png",
    "content": "<NormalText>When I started coding this personal website weeks ago, I was too lazy to setup automatic deployment upon any new changes I made to the site. Soon I found that it was <BoldText>SO STUPID</BoldText> to manually run the deploy command every single time I commit new changes to the site. That's why I seek help from <HyperLinkText href={`https://circleci.com/`}>Circle CI</HyperLinkText>.</NormalText><Breakline /><Header>So what is CI / CD ????</Header><Image src=\"/cicd/cicd-pipeline.png\" alt=\"cicd-pipeline\" /><NormalText><BoldText>CI</BoldText> stands for <BoldText>Continuous Integration</BoldText>. So if I have set up a CI environment for my website, I can ensure the whole project will be built in the same environment and with the same versions of packages whenever I commited my code from anywhere. This can avoid the compatability issue of the update I made with the existing code base. Also, I can setup some tests for my commits acting as a second barrier before actually deploying.</NormalText><NormalText><BoldText>CD</BoldText> stands for <BoldText>Continuous Deployment</BoldText>. As you can tell from the words, it just means the server will help you in automatically deploying after all those checking and building in the above steps.</NormalText><Breakline /><Header>How do I make use of Circle CI ?</Header><NormalText>So basically I wrote a <BoldText>config.yml</BoldText> file under root folder <BoldText>.circleci</BoldText>.</NormalText><Code language=\"yaml\">{`# Version of CircleCI\nversion: 2.1\n\njobs:\t\n# Name of the job\t\n\tdeploy-site:\n\t\t# Tell CircleCI that I need docker environment\n\t\tdocker:\n\t\t\t# Specify the image I need\n\t\t\t- image: circleci/node:latest\n\n\t\tworking_directory: ~/my-portfolio\n\n\t\tsteps:\n\t\t\t- checkout\n\n\t\t\t- run: sudo npm install -g gh-pages\n\n\t\t\t# Download and cache dependencies to avoid installing package per commit\n\t\t\t- restore_cache:\n\t\t\t\tkeys:\n\t\t\t\t- dependencies-{{ checksum \"package.json\" }}\n\t\t\t\t# Fallback to using the latest cache if no exact match is found \n\t\t\t\t- dependencies-\n\n\t\t\t- run: yarn install\n\n\t\t\t- save_cache:\n\t\t\t\tpaths:\n\t\t\t\t\t- node_modules\n\t\t\t\tkey: dependencies-{{ checksum \"package.json\" }}\n\n\t\t\t- run: yarn run build\n\n\t\t\t- run: git config --global user.email chrisliupascal@gmail.com\n\n\t\t\t- run: git config --global user.name nighostchris\n\n\t\t\t- run: yarn run deploy\nworkflows:\n\tmain:\n\t\tjobs:\n\t\t\t- deploy-site\n\ngeneral:\n\tbranches:\n\t\tonly:\n\t\t\t- dev`}</Code><NormalText>I wrote the above .yml by reading some <HyperLinkText href={`https://circleci.com/docs/2.0/configuration-reference/#section=configuration`}>documentation</HyperLinkText> in Circle CI.</NormalText><Image src=\"/cicd/circle-doc-1.png\" alt=\"circle-doc-1\" /><Image src=\"/cicd/circle-doc-2.png\" alt=\"circle-doc-2\" /><NormalText>And then I go to CircleCI...</NormalText><NormalText>Register an account...</NormalText><NormalText>Link CircleCI with my Github and push my code</NormalText><NormalText>See if the config works...</NormalText><Image src=\"/cicd/circle-github-auth.png\" alt=\"circle-github-auth\" /><NormalText>The reason of the error is that CircleCI needs a <BoldText>deploy key with greater priviledge</BoldText>, which is <BoldText>write access</BoldText> to repository in this case, to deploy the updated built site. So now I went to the project setting page...</NormalText><Image src=\"/cicd/circle-github-auth-2.png\" alt=\"circle-github-auth-2\" /><NormalText>Click the <BoldText>Authorize with GitHub</BoldText> button...</NormalText><Image src=\"/cicd/circle-github-auth-3.png\" alt=\"circle-github-auth-3\" /><Image src=\"/cicd/circle-github-auth-4.png\" alt=\"circle-github-auth-4\" /><NormalText>And now I can add a user key with higher priviledge. Run the CircleCI deployment process again...</NormalText><Image src=\"/cicd/cicd-success.png\" alt=\"circle-github-auth-4\" /><NormalText><BoldText>NICE!!!</BoldText> I don't need to worry about deploying my site with updates regularly now and focus on coding new stuffs and writing passages like this one XD. Thanks for reading. See you next time!</NormalText>"
  },
  {
    "id": "1",
    "title": "Let's have a journey of mobile app development",
    "subtitle": "Entering the mobile world",
    "date": "Last Draft at 2020-06-21 20:48",
    "description": "So actually I have been quite interested in experiencing mobile app development for few years but I still haven't try it out when I am writing this paragraph LOL...",
    "length": 7,
    "author": "Chris Liu",
    "avatarsrc": "https://cdn.pixabay.com/photo/2015/03/04/22/35/head-659652_960_720.png",
    "content": "<NormalText><BoldText>Disclaimer: I am just a guy that spent most of my time focusing on developing website. I am just writing this passage to record how I learn and try mobile app development. My views and comments could probably be VERY WRONG XD.</BoldText></NormalText><NormalText>So actually I have been quite interested in experiencing mobile app development for few years but I still haven't try it out when I am writing this paragraph LOL. From my understanding, the current trend of mobile app development can be seperated into 2 parts, <BoldText>native</BoldText> and <BoldText>cross-platform</BoldText>.</NormalText><Breakline /><Header>Native</Header><NormalText>Native means coding a mobile app by a specific language that targets to run on certain operating system. For example, <BoldText>Java</BoldText> and <BoldText>Kotlin</BoldText> for Android platform, <BoldText>Objective C</BoldText> and <BoldText>Swift</BoldText> for IOS platform. Since I am going to dig into IOS platform, I won't be exploring Java and Kotlin here.</NormalText><Image src=\"/ios/swift-vs-objective-c.jpg\" alt=\"swift-vs-objective-c\" /><NormalText>I found out there is quite an interesting story behind Objective-C.</NormalText><BulletList listItems={[\"In 1986, the inventors of Objective-C published a book about the design concept of the language, which marked the birth of Objective-C.\", \"Steve Jobs was abandoned by Apple and he founded another company called NeXT. NeXT bought the copyright of Objective-C in 1988 for developing AppKit and FoundationKit.\", \"Apple absorbed NeXT in late 1991 and Steve Jobs become CEO of Apple again.\", \"And probably you now understand how Objective-C became foundation of OS X. But obviously it is VERY OLD already and that's why Swift comes in.\"]}></BulletList>"
  }
]